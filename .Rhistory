labs(title = "Number of COVID cases against death by WHO region"),
`Cases against Death facet` = ggplot(filter(regions, New_cases >= 0),
aes(New_cases, New_deaths, colour=WHO_region)) +
geom_point(alpha=.2) +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(vars(WHO_region)) +
theme(aspect.ratio=1, legend.position="none") +
labs(title = "Number of COVID cases against death by WHO region by facet")
)
#Save file to the disk
saveRDS(computational_components_covid, "comp-comp_covid.rds")
comp_covid <- readRDS("comp-comp_covid.rds")
ld_cc_dendro(comp_covid)
#Making a listdown object
library(listdown)
library(knitr)
ld_new <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales", "dplyr"))
ld_new
covidexample <- c(
as.character(ld_rmarkdown_header("Covid plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_new))
covidexample
library(knitr)
# Write the document.
writeLines(covidexample, "covid-example.Rmd")
render("covid-example.Rmd",html_document())
system("open covid-example.html")
#Add in data and decorators
ld_decorator <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales", "dplyr", "plotly"),
decorator = list(ggplot = ggplotly))
coviddecoratorexample <- c(
as.character(ld_rmarkdown_header("covid-example")),
ld_make_chunks(ld_decorator))
writeLines(coviddecoratorexample, "covid-decorator-example.Rmd")
render("covid-decorator-example.Rmd",html_document())
system("open covid-decorator-example.html")
covidexample <- c(
as.character(ld_rmarkdown_header("Covid plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_new))
covidexample
View(regions)
library(trelliscopejs)
ggplot(year, lifeExp, data = gapminder) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(pdp)
install.packages("pdp")
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(pdp)
library(rmarkdown)
library(ggplot2)
library(trelliscopejs)
ggplot(year, lifeExp, data = gapminder) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
gapminder
ggplot(aes(x = year, y = lifeExp), data = gapminder) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
library(ggplot2)
library(trelliscopejs)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp))
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 4, width = 300)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 2, width = 300)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 1, width = 300)
facet_wrap(~ country + continent)
ggplot( gapminder) +
geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent)
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp_comp_gapminder_trellis.rds")
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp_comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300)
}
)
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp_comp_gapminder_trellis.rds")
# Adding trelliscope call in the initial expressions
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp_comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300)
}
)
gapmindertrellisexample <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapmindertrellisexample, "gapmindertrellisexample.Rmd")
render("gapmindertrellisexample.Rmd",html_document())
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp_comp_gapminder_trellis.rds")
# Adding trelliscope call in the initial expressions
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp_comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300)
}
)
gapmindertrellisexample <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapmindertrellisexample, "gapmindertrellisexample.Rmd")
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp_comp_gapminder_trellis.rds")
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp_comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
gapmindertrellisexample <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapmindertrellisexample, "gapmindertrellisexample.Rmd")
render("gapmindertrellisexample.Rmd",html_document())
system("open gapminder-example.html")
library(ggplot2)
library(gapminder)
head(gapminder)
str(gapminder)
summary(gapminder$continent)
summary(gapminder$continent)
#just oceania
qplot(year, lifeExp, data = subset(gapminder, continent == "Oceania")) +
facet_wrap(~ country + continent) + theme_bw()
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(pdp)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
# Creating the computational components
computational_components_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
#Save file to the disk
saveRDS(computational_components_gapminder, "comp-comp_gapminder.rds")
# A not very effective visualization
ld_gapminder <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder"))
gapminderexample <- c(
as.character(ld_rmarkdown_header("gapminder plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder))
writeLines(gapminderexample, "gapminder-example.Rmd")
render("gapminder-example.Rmd",html_document())
system("open gapminder-example.html")
# What trelliscope would look like when we use trelliscope instead of facet
library(ggplot2)
library(trelliscopejs)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp_comp_gapminder_trellis.rds")
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp_comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
gapmindertrellisexample <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapmindertrellisexample, "gapmindertrellisexample.Rmd")
render("gapmindertrellisexample.Rmd",html_document())
system("open gapmindertrellisexample.html")
# TrelliscopeJS generic
## y  <- ggplot obejct
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))), path=".", ncol=2))
## (you could replace ncol=2 etc. with ...
y + eval(c)
} else y
# TrelliscopeJS generic
y # <- ggplot obejct
# TrelliscopeJS generic
y ## <- ggplot obejct
y ## <- ggplot obejct
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))), path=".", ncol=2))
## (you could replace ncol=2 etc. with ...
y + eval(c)
} else y
}
# TrelliscopeJS generic
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))), path=".", ...))
y + eval(c)
} else print(y, "has no applicable methods")
}
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))), path=".", ...))
y + eval(c)
} else print(y, "has no applicable methods")
}
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(pdp)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
# Creating the computational components
comp-comp_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(pdp)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
# Creating the computational components
comp_comp_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
#Save file to the disk
saveRDS(comp_comp_gapminder, "comp-comp_gapminder.rds")
# A not very effective visualization
ld_gapminder <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder"))
gapminder_example <- c(
as.character(ld_rmarkdown_header("gapminder plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder))
writeLines(gapminder_example, "gapminder-example.Rmd")
render("gapminder-example.Rmd",html_document())
system("open gapminder-example.html")
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = gaptre),
init_expr = {
gaptre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
system("open gapminder_trellis-example.html")
system("open gapminder_trellis-example.html")
# Created a generic function for telliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))), path=".", ...))
y + eval(c)
} else print(y, "has no applicable methods")
}
## Same data set as the first example, switching the decorator this time instead of adding initial expression
ld_gapminder_trellis_generic <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
gapminder_trellis_generic_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope generic",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_generic))
writeLines(gapminder_trellis_generic_example, "gapminder_trellis_generic-example.Rmd")
render("gapminder_trellis_generic-example.Rmd",html_document())
?ggplot
# Created a generic function for telliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))), ...,path="."))
y + eval(c)
} else print(y, "has no applicable methods")
}
## Same data set as the first example, switching the decorator this time instead of adding initial expression
ld_gapminder_trellis_generic <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
gapminder_trellis_generic_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope generic",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_generic))
writeLines(gapminder_trellis_generic_example, "gapminder_trellis_generic-example.Rmd")
render("gapminder_trellis_generic-example.Rmd",html_document())
# Created a generic function for telliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))),ncol = 2,path="."))
y + eval(c)
} else print(y, "has no applicable methods")
}
## Same data set as the first example, switching the decorator this time instead of adding initial expression
ld_gapminder_trellis_generic <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
gapminder_trellis_generic_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope generic",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_generic))
writeLines(gapminder_trellis_generic_example, "gapminder_trellis_generic-example.Rmd")
render("gapminder_trellis_generic-example.Rmd",html_document())
system("open gapminder_trellis_generic-example.html")
