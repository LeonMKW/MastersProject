by.x="name_long", by.y="Country")
df1 <- countryMonthTotals %>% filter(countryMonthTotals$Month == "June") %>% filter(sqrt(New_cases) >= 300)
df2 <- countryMonthTotals %>% filter(Country %in% unique(df1$Country))
ggplot(data = countryMonthTotals, aes(x = Month, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df2, aes(x = Month, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df1,
aes(label = Country,
x = "June", y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldMonthCentres <-
cbind(worldMonthTotals,
st_coordinates(st_centroid(worldMonthTotals,
of_largest_polygon=TRUE)))
library(ggplot2)
library(sf)
ggplot(data = worldMonthCentres) + geom_sf(fill = "grey30") +
geom_point(mapping = aes(size = New_cases, geometry = geometry, fill = New_cases), stat = "sf_coordinates", shape = 21) + scale_size_continuous(range = c(1, 5)) +
scale_fill_steps(trans = "log10", breaks = c(1000, 10000, 100000, 1000000), low = "green", high = "pink") +
facet_wrap(.~Month, ncol =  2)
x
df1 <- countryMonthTotals %>% filter(countryMonthTotals$Month == "June") %>% filter(sqrt(New_cases) >= 300)
df2 <- countryMonthTotals %>% filter(Country %in% unique(df1$Country))
ggplot(data = countryMonthTotals, aes(x = Month, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df2, aes(x = Month, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df1,
aes(label = Country,
x = "June", y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
worldCountries
worldMonthCentres <-
cbind(worldMonthTotals,
st_coordinates(st_centroid(worldMonthTotals,
of_largest_polygon=TRUE)))
worldMonthCentres
worldCountries
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
worldCountries
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)))
head(countries)
countryTotals <- aggregate(countries["New_cases"],
list(Country=countries$CountryName,
WHO_region=countries$WHO_region),
sum)
world <- ne_countries(scale="small",
continent=c("asia", "africa", "europe",
"south america", "oceania",
"north america"),
returnclass="sf")
world
countryTotals
countries
countries
df1 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df2 <- countries %>% filter(Country %in% unique(df1$Country))
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(Country %in% unique(df1$Country))
df4
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt()
df4
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt()
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt()
df3
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3)
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt()
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top")
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)))
head(countries)
fixupCountry <- function(x) {
gsub("United States of America", "United States",
gsub("Bolivia.+", "Bolivia",
gsub(".+Ivoire", "CÃ´te d'Ivoire",
gsub("Congo", "Democratic Republic of the Congo",
gsub("Czechia", "Czech Republic",
gsub("Falkland.+", "Falkland Islands",
gsub("The United Kingdom", "United Kingdom",
gsub("Gambia", "The Gambia",
gsub("Iran.+", "Iran",
gsub("Kosovo.+", "Kosovo",
gsub("Lao People.+", "Lao PDR",
gsub("Republic of Moldova", "Moldova",
gsub("North Macedonia", "Macedonia",
gsub("Syrian Arab Republic", "Syria",
gsub("United Republic of Tanzania", "Tanzania",
gsub("Venezuela.+", "Venezuela",
gsub("Viet Nam", "Vietnam",
x)))))))))))))))))
}
countries$CountryName <- fixupCountry(countries$Country)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
world <- ne_countries(scale="small",
continent=c("asia", "africa", "europe",
"south america", "oceania",
"north america"),
returnclass="sf")
## Mercator projection
library(sf)
worldMerc <- st_transform(world, 3395)
countryTotals <- aggregate(countries["New_cases"],
list(Country=countries$CountryName,
WHO_region=countries$WHO_region),
sum)
countryTotals$Country <- reorder(countryTotals$Country,
countryTotals$New_cases)
worldCountryTotals <- merge(worldMerc, countryTotals,
by.x="name_long", by.y="Country")
library(ggplot2)
ggplot(data = countryTotals, aes(x = New_cases, y = Country, color = WHO_region)) +
geom_segment(aes(xend = min(New_cases), yend = Country), lineend = "butt", size = 0.6) + scale_x_sqrt(expand = c(0,0)) +
theme(axis.text.y = element_text(size = 6),
panel.grid.major.y  = element_blank())
library(ggplot2)
library(sf)
ggplot() + geom_sf(data = worldCountryTotals, mapping = aes(fill = New_cases))
library(ggplot2)
library(sf)
ggplot(data = worldCountryTotals) + geom_sf( mapping = aes(fill =New_cases)) +
scale_fill_binned(trans = "log10", breaks = c(1000, 10000, 100000, 1000000))
worldTotalsCentres <-
cbind(worldCountryTotals,
st_coordinates(st_centroid(worldCountryTotals,
of_largest_polygon=TRUE)))
library(ggplot2)
library(sf)
ggplot(data = worldTotalsCentres) + geom_sf(fill = "grey30") +
geom_point(mapping = aes(size = New_cases, geometry = geometry, fill = New_cases), stat = "sf_coordinates", shape = 21) + scale_size_continuous(range = c(1, 11)) +
scale_fill_steps(trans = "log10", breaks = c(1000, 10000, 100000, 1000000), low = "green", high = "pink")
library(ggplot2)
library(tidyverse)
countryMonthTotals <-
aggregate(countries["New_cases"],
list(Country=countries$CountryName,
WHO_region=countries$WHO_region,
Month=factor(months(countries$Date_reported),
levels=month.name)),
sum)
worldMonthTotals <- merge(worldMerc, countryMonthTotals,
by.x="name_long", by.y="Country")
df1 <- countryMonthTotals %>% filter(countryMonthTotals$Month == "June") %>% filter(sqrt(New_cases) >= 300)
df2 <- countryMonthTotals %>% filter(Country %in% unique(df1$Country))
ggplot(data = countryMonthTotals, aes(x = Month, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df2, aes(x = Month, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df1,
aes(label = Country,
x = "June", y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldMonthCentres <-
cbind(worldMonthTotals,
st_coordinates(st_centroid(worldMonthTotals,
of_largest_polygon=TRUE)))
library(ggplot2)
library(sf)
ggplot(data = worldMonthCentres) + geom_sf(fill = "grey30") +
geom_point(mapping = aes(size = New_cases, geometry = geometry, fill = New_cases), stat = "sf_coordinates", shape = 21) + scale_size_continuous(range = c(1, 5)) +
scale_fill_steps(trans = "log10", breaks = c(1000, 10000, 100000, 1000000), low = "green", high = "pink") +
facet_wrap(.~Month, ncol =  2)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = "June", y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = "June", y = New_cases, hjust = 0), color = "grey50", size = 2.5)
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top")
df4
df3
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = end(Date_reported), y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = 566, y = New_cases, hjust = 0), color = "grey50", size = 2.5)
df3
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = 2020-06-23, y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = 1, y = New_cases, hjust = 0), color = "grey50", size = 2.5)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- countries %>% filter(Country %in% c("United States of America", "Brazil", "India", "Russian Federation"))
df4 <- countries %>% filter(! Country %in% unique(df1$Country))
ggplot(data = df4, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df3, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df3,
aes(label = Country,
x = Date_reported, y = New_cases, hjust = 0), color = "grey50", size = 2.5)
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)))
head(countries)
fixupCountry <- function(x) {
gsub("United States of America", "United States",
gsub("Bolivia.+", "Bolivia",
gsub(".+Ivoire", "CÃ´te d'Ivoire",
gsub("Congo", "Democratic Republic of the Congo",
gsub("Czechia", "Czech Republic",
gsub("Falkland.+", "Falkland Islands",
gsub("The United Kingdom", "United Kingdom",
gsub("Gambia", "The Gambia",
gsub("Iran.+", "Iran",
gsub("Kosovo.+", "Kosovo",
gsub("Lao People.+", "Lao PDR",
gsub("Republic of Moldova", "Moldova",
gsub("North Macedonia", "Macedonia",
gsub("Syrian Arab Republic", "Syria",
gsub("United Republic of Tanzania", "Tanzania",
gsub("Venezuela.+", "Venezuela",
gsub("Viet Nam", "Vietnam",
x)))))))))))))))))
}
countries$CountryName <- fixupCountry(countries$Country)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
world <- ne_countries(scale="small",
continent=c("asia", "africa", "europe",
"south america", "oceania",
"north america"),
returnclass="sf")
## Mercator projection
library(sf)
worldMerc <- st_transform(world, 3395)
countryTotals <- aggregate(countries["New_cases"],
list(Country=countries$CountryName,
WHO_region=countries$WHO_region),
sum)
countryTotals$Country <- reorder(countryTotals$Country,
countryTotals$New_cases)
worldCountryTotals <- merge(worldMerc, countryTotals,
by.x="name_long", by.y="Country")
library(ggplot2)
ggplot(data = countryTotals, aes(x = New_cases, y = Country, color = WHO_region)) +
geom_segment(aes(xend = min(New_cases), yend = Country), lineend = "butt", size = 0.6) + scale_x_sqrt(expand = c(0,0)) +
theme(axis.text.y = element_text(size = 6),
panel.grid.major.y  = element_blank())
library(ggplot2)
library(sf)
ggplot() + geom_sf(data = worldCountryTotals, mapping = aes(fill = New_cases))
library(ggplot2)
library(sf)
ggplot(data = worldCountryTotals) + geom_sf( mapping = aes(fill =New_cases)) +
scale_fill_binned(trans = "log10", breaks = c(1000, 10000, 100000, 1000000))
worldTotalsCentres <-
cbind(worldCountryTotals,
st_coordinates(st_centroid(worldCountryTotals,
of_largest_polygon=TRUE)))
library(ggplot2)
library(sf)
ggplot(data = worldTotalsCentres) + geom_sf(fill = "grey30") +
geom_point(mapping = aes(size = New_cases, geometry = geometry, fill = New_cases), stat = "sf_coordinates", shape = 21) + scale_size_continuous(range = c(1, 11)) +
scale_fill_steps(trans = "log10", breaks = c(1000, 10000, 100000, 1000000), low = "green", high = "pink")
library(ggplot2)
library(tidyverse)
countryMonthTotals <-
aggregate(countries["New_cases"],
list(Country=countries$CountryName,
WHO_region=countries$WHO_region,
Month=factor(months(countries$Date_reported),
levels=month.name)),
sum)
worldMonthTotals <- merge(worldMerc, countryMonthTotals,
by.x="name_long", by.y="Country")
df1 <- countryMonthTotals %>% filter(countryMonthTotals$Month == "June") %>% filter(sqrt(New_cases) >= 300)
df2 <- countryMonthTotals %>% filter(Country %in% unique(df1$Country))
ggplot(data = countryMonthTotals, aes(x = Month, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df2, aes(x = Month, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top") +
geom_text(data = df1,
aes(label = Country,
x = "June", y = New_cases, hjust = 0), color = "grey50", size = 2.5)
library(ggplot2)
library(sf)
worldMonthCentres <-
cbind(worldMonthTotals,
st_coordinates(st_centroid(worldMonthTotals,
of_largest_polygon=TRUE)))
ggplot(data = worldMonthCentres) + geom_sf(fill = "grey30") +
geom_point(mapping = aes(size = New_cases, geometry = geometry, fill = New_cases), stat = "sf_coordinates", shape = 21) + scale_size_continuous(range = c(1, 5)) +
scale_fill_steps(trans = "log10", breaks = c(1000, 10000, 100000, 1000000), low = "green", high = "pink") +
facet_wrap(.~Month, ncol =  2)
library(tidyverse)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- worldCountries %>% filter(Date_reported == max(Date_reported)) %>%
filter(sqrt(New_cases) >= 80)
df4 <- worldCountries %>% filter(Country %in% unique(df3$Country))
ggplot(data = worldCountries, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3) +
geom_line(data = df4, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top", axis.title = element_text(size = 10), plot.margin = grid:: unit(c(0,30,0,0), "mm")) +
geom_text(data = df3,aes(label = Country,
x = Date_reported, y = New_cases, hjust = 0), color = "grey50", size = 2.5) +
coord_cartesian(clip = "off")
countryCentres <-
cbind(worldCountries,
st_coordinates(st_centroid(worldCountries,
of_largest_polygon=TRUE)))
library(tidyverse)
worldCountries <- merge(worldMerc, countries,
by.x="name_long", by.y="CountryName")
df3 <- worldCountries %>% filter(Date_reported == max(Date_reported)) %>%
filter(sqrt(New_cases) >= 80)
df4 <- worldCountries %>% filter(Country %in% unique(df3$Country))
ggplot(data = worldCountries, aes(x = Date_reported, y = New_cases, group = Country, color = WHO_region)) +
geom_line(alpha = 0.3, size = 0.8) +
geom_line(data = df4, aes(x = Date_reported, y = New_cases, color = WHO_region, group = Country)) +
scale_y_sqrt() +
theme(legend.position = "top", axis.title = element_text(size = 10), plot.margin = grid:: unit(c(0,30,0,0), "mm")) +
geom_text(data = df3,aes(label = Country,
x = Date_reported, y = New_cases, hjust = 0), color = "grey50", size = 2.5) +
coord_cartesian(clip = "off")
countryCentres <-
cbind(worldCountries,
st_coordinates(st_centroid(worldCountries,
of_largest_polygon=TRUE)))
library(gganimate)
library(transformr)
library(png)
library(gifski)
newset <- worldCountries %>% select(Date_reported, geometry, New_cases) %>%
mutate(Date = Date_reported)
transtime <- ggplot() +
geom_sf(data = worldMerc, fill = "grey40") +
geom_point(data = newset, aes(size = New_cases, fill = New_cases, geometry = geometry),
shape = 21, color = "black", fill = "rosybrown", stat = "sf_coordinates") +
transition_time(Date) +
xlab("X") + ylab("Y") +
ggtitle("{frame_time}") +
scale_size_area(max_size = 10) + labs(fill = "New_cases", size = "New_cases")
animate(transtime, end_pause = 30)
countryCentres <-
cbind(worldCountries,
st_coordinates(st_centroid(worldCountries,
of_largest_polygon=TRUE)))
library(gganimate)
library(transformr)
library(png)
library(gifski)
newset <- worldCountries %>% select(Date_reported, geometry, New_cases) %>%
mutate(Date = Date_reported)
transtime <- ggplot() +
geom_sf(data = worldMerc, fill = "grey40") +
geom_point(data = newset, aes(size = New_cases, fill = New_cases, geometry = geometry),
shape = 21, color = "black", fill = "brown", stat = "sf_coordinates") +
transition_time(Date) +
xlab("X") + ylab("Y") +
ggtitle("{frame_time}") +
scale_size_area(max_size = 10) + labs(fill = "New_cases", size = "New_cases")
animate(transtime, end_pause = 30)
library(png)
library(gifski)
library(gganimate)
library(transformr)
countryCentres <-
cbind(worldCountries,
st_coordinates(st_centroid(worldCountries,
of_largest_polygon=TRUE)))
bubbles <- worldCountries %>% select(Date_reported, geometry, New_cases) %>%
mutate(Date = Date_reported)
p8 <- ggplot(data = worldMerc) + geom_sf( fill = "grey30") +
geom_point(data = bubbles, aes(size = New_cases, fill = New_cases, geometry = geometry), fill = "#FFA07A",
stat = "sf_coordinates", shape = 21) +
transition_time(Date) +
xlab("X") + ylab("Y") +
ggtitle("{frame_time}") +
scale_size_area(max_size = 10) + labs(fill = "New_cases", size = "New_cases")
animate(transtime, end_pause = 30)
library(png)
library(gifski)
library(gganimate)
library(transformr)
countryCentres <-
cbind(worldCountries,
st_coordinates(st_centroid(worldCountries,
of_largest_polygon=TRUE)))
bubbles <- worldCountries %>% select(Date_reported, geometry, New_cases) %>%
mutate(Date = Date_reported)
p8 <- ggplot(data = worldMerc) + geom_sf( fill = "grey30") +
geom_point(data = bubbles, aes(size = New_cases, fill = New_cases, geometry = geometry), fill = "#D82C20",
stat = "sf_coordinates", shape = 21) +
transition_time(Date) +
scale_size_area(max_size = 10) +
labs(fill = "New_cases", size = "New_cases") +
ggtitle("{frame_time}") +
animate(transtime, end_pause = 30)
library(png)
library(gifski)
library(gganimate)
library(transformr)
countryCentres <-
cbind(worldCountries,
st_coordinates(st_centroid(worldCountries,
of_largest_polygon=TRUE)))
bubbles <- worldCountries %>% select(Date_reported, geometry, New_cases) %>%
mutate(Date = Date_reported)
p8 <- ggplot(data = worldMerc) + geom_sf( fill = "grey30") +
geom_point(data = bubbles, aes(size = New_cases, fill = New_cases, geometry = geometry), fill = "#coral",
stat = "sf_coordinates", shape = 21) +
transition_time(Date) +
scale_size_area(max_size = 10) +
labs(fill = "New_cases", size = "New_cases") +
ggtitle("{frame_time}") +
animate(transtime, end_pause = 30)
