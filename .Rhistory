iris
View(iris)
ggplot(iris) + geom_point(aes(x = Sepal.length, y = Sepal.width)) + facet_wrap(vars(Species))
piris <- ggplot(iris) + geom_point(aes(x = Sepal.Length, y = Sepal.Width)) + facet_wrap(vars(Species))
piris
str(piris)
str(piris$facet)
str(piris$facet$vars)
str(piris$facet$params)
str(piris$facet$compute_layout)
str(piris$facet$draw_back)
str(piris$facet$vars)
Sys.setenv(LANG = "en")
library(listdown)
library(ggplot2)
library(gtsummary)
library(flextable)
library(dplyr)
library(survival)
library(survminer)
library(rmarkdown)
library(plotly)
library(gapminder)
library(trelliscopejs)
library(DT)
library(knitr)
library(listdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(dplyr)
# Read in the regions data set.
regions = read.csv("COVID-regions-2021.csv",
colClasses=c("character", "Date", rep("numeric", 2)))
# Creating the computational components
computational_components_covid <- list(
Data = regions,
`New cases per day for each region` = ggplot(regions) +
geom_area(aes(Date_reported, New_cases, colour=WHO_region, fill=WHO_region),
stat="smooth",
alpha=.2, position="identity",
method="loess", span=.1)+ labs(title = "Number of daily COVID cases by WHO region") +
scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`New cases per day for each region facet` = ggplot(regions,
aes(x = Date_reported, y = New_cases, col = WHO_region, fill = WHO_region,
stat = "smooth",  method="loess", span=.1)) + geom_area( alpha=.5) +
facet_wrap(.~WHO_region) + labs(title = "Number of daily COVID cases by WHO region facet") + scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`Cases against Death` = ggplot(data = regions,
aes(x=New_cases, y=New_deaths, color = WHO_region)) + geom_point(alpha = .2) +
scale_x_sqrt() +
scale_y_sqrt() +
labs(title = "Number of COVID cases against death by WHO region"),
`Cases against Death facet` = ggplot(filter(regions, New_cases >= 0),
aes(New_cases, New_deaths, colour=WHO_region)) +
geom_point(alpha=.2) +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(vars(WHO_region)) +
theme(aspect.ratio=1, legend.position="none") +
labs(title = "Number of COVID cases against death by WHO region by facet")
)
#Save file to the disk
saveRDS(computational_components_covid, "comp-comp_covid.rds")
comp_covid <- readRDS("comp-comp_covid.rds")
ld_cc_dendro(comp_covid)
`Cases against Death facet` = ggplot(filter(regions, New_cases >= 0),
aes(New_cases, New_deaths, colour=WHO_region)) +
geom_point(alpha=.2) +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(vars(WHO_region)) +
theme(aspect.ratio=1, legend.position="none") +
labs(title = "Number of COVID cases against death by WHO region by facet")
)
library(listdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(dplyr)
# Read in the regions data set.
regions = read.csv("COVID-regions-2021.csv",
colClasses=c("character", "Date", rep("numeric", 2)))
# Creating the computational components
computational_components_covid <- list(
Data = regions,
`New cases per day for each region` = ggplot(regions) +
geom_area(aes(Date_reported, New_cases, colour=WHO_region, fill=WHO_region),
stat="smooth",
alpha=.2, position="identity",
method="loess", span=.1)+ labs(title = "Number of daily COVID cases by WHO region") +
scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`New cases per day for each region facet` = ggplot(regions,
aes(x = Date_reported, y = New_cases, col = WHO_region, fill = WHO_region,
stat = "smooth",  method="loess", span=.1)) + geom_area( alpha=.5) +
facet_wrap(.~WHO_region) + labs(title = "Number of daily COVID cases by WHO region facet") + scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`Cases against Death` = ggplot(data = regions,
aes(x=New_cases, y=New_deaths, color = WHO_region)) + geom_point(alpha = .2) +
scale_x_sqrt() +
scale_y_sqrt() +
labs(title = "Number of COVID cases against death by WHO region"),
`Cases against Death facet` = ggplot(filter(regions, New_cases >= 0),
aes(New_cases, New_deaths, colour=WHO_region)) +
geom_point(alpha=.2) +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(vars(WHO_region)) +
theme(aspect.ratio=1, legend.position="none") +
labs(title = "Number of COVID cases against death by WHO region by facet")
)
#Save file to the disk
saveRDS(computational_components_covid, "comp-comp_covid.rds")
comp_covid <- readRDS("comp-comp_covid.rds")
ld_cc_dendro(comp_covid)
library(knitr)
library(rmarkdown)
# Write the document.
writeLines(covidexample, "covid-example.Rmd")
#Making a listdown object
library(listdown)
library(knitr)
ld_new <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales"))
ld_new
covidexample <- c(
as.character(ld_rmarkdown_header("Covid plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_new))
covidexample
library(knitr)
library(rmarkdown)
# Write the document.
writeLines(covidexample, "covid-example.Rmd")
render("covid-example.Rmd",html_document())
system("open covid-example.html")
citation("gapminder")
covidraw <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)))
View(covidraw)
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)))
View(countries)
View(covidraw)
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)), fileEncoding="UTF-8-BOM")
View(countries)
covidraw <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
#Reading in the data
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)), fileEncoding="UTF-8-BOM")
View(covidraw)
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidraw <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
covidcountries
ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country))
# Created a generic function for telliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))),ncol = 2,path="."))
y + eval(c)
} else print(y, "has no applicable methods")
}
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
# Created a generic function for telliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))),ncol = 2,path="."))
y + eval(c)
} else print(y, "has no applicable methods")
}
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
#Reading in the data
countries <- read.csv("COVID-countries.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 2)), fileEncoding="UTF-8-BOM")
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(countries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis__latestexample <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(countries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis__latest_example <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(countries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis_latest_example <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
render("covid_trellis_latest-example.Rmd",html_document())
system("covid_trellis_latest-example.html")
system("open covid_trellis_latest-example.html")
covidcountries
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(countries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +  scale_x_date(date_labels = "%Y (%b)") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis_latest_example <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
render("covid_trellis_latest-example.Rmd",html_document())
system("open covid_trellis_latest-example.html")
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +  scale_x_date(date_labels = "%Y (%b)") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis_latest_example <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
render("covid_trellis_latest-example.Rmd",html_document())
system("open covid_trellis_latest-example.html")
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +  scale_x_date(labels = date_format("%m-%Y")) +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +  scale_x_date(date_breaks = "1 month", date_labels =  "%b %Y")  +
theme(axis.text.x=element_text(angle=60, hjust=1)) +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis_latest_example <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
render("covid_trellis_latest-example.Rmd",html_document())
system("open covid_trellis_latest-example.html")
ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +  scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)), fileEncoding="UTF-8-BOM")
covidcountries <- covidraw %>% select(-Cumulative_cases, -Cumulative_deaths)
# Creating the list
comp_comp_covid_trellis_latest <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country)) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country)) +  scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis_latest, "comp_comp_covid_trellis_latest.rds")
# Creating the listdown package
ld_covid_tellis_latest <- listdown(load_cc_expr = readRDS("comp_comp_covid_trellis_latest.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
# Adding a header
covid_trellis_latest_example <- c(
as.character(ld_rmarkdown_header("latest Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_tellis_latest))
# Rendering
writeLines(covid_trellis_latest_example, "covid_trellis_latest-example.Rmd")
render("covid_trellis_latest-example.Rmd",html_document())
system("open covid_trellis_latest-example.html")
ld_decorator
ld_decorator <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales", "plotly"),
decorator = list(ggplot = ggplotly))
#Add in data and decorators
library(listdown)
ld_decorator <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales", "plotly"),
decorator = list(ggplot = ggplotly))
ld_decorator
#Making a listdown object
library(listdown)
library(knitr)
ld_new <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales"))
class(ld_new)
ld_new
class(ld_decorator)
ld_decorator
