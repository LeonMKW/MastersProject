## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), form,
ncol = 2, path="."))
y + eval(c)
} else y
}
class(c)
class(form)
# Created a generic function for trelliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), form,
ncol = 2, path="."))
y + eval(c)
} else y
}
class(form)
form
class(v)
v = y$facet$vars()
# What trelliscope would look like when we use trelliscope instead of facet
library(ggplot2)
library(trelliscopejs)
ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
# Load the gapminder data set.
data(gapminder, options(encoding = "native.enc"))
library(ggplot2)
library(gapminder)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder, options(encoding = "native.enc"))
# Creating the computational components
comp_comp_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
#Save file to the disk
saveRDS(comp_comp_gapminder, "comp-comp_gapminder.rds")
# A not very effective visualization
ld_gapminder <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder"))
gapminder_example <- c(
as.character(ld_rmarkdown_header("gapminder plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder))
writeLines(gapminder_example, "gapminder-example.Rmd")
render("gapminder-example.Rmd",html_document())
system("open gapminder-example.html")
# What trelliscope would look like when we use trelliscope instead of facet
library(ggplot2)
library(trelliscopejs)
library(gaminder)
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
log(1)
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)))
View(covidcountries)
Sys.setenv(LANG = "en")
library(listdown)
library(ggplot2)
library(gtsummary)
library(flextable)
library(dplyr)
library(survival)
library(survminer)
library(rmarkdown)
library(plotly)
library(gapminder)
library(trelliscopejs)
library(DT)
library(knitr)
Sys.setenv(LANG = "en")
library(listdown)
library(ggplot2)
library(gtsummary)
library(flextable)
library(dplyr)
library(survival)
library(rmarkdown)
library(plotly)
library(gapminder)
library(trelliscopejs)
library(DT)
library(knitr)
library(ggplot2)
library(gapminder)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
# Creating the computational components
comp_comp_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
#Save file to the disk
saveRDS(comp_comp_gapminder, "comp-comp_gapminder.rds")
# A not very effective visualization
ld_gapminder <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder"))
gapminder_example <- c(
as.character(ld_rmarkdown_header("gapminder plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder))
writeLines(gapminder_example, "gapminder-example.Rmd")
render("gapminder-example.Rmd",html_document())
system("open gapminder-example.html")
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
detach("package:gapminder", unload = TRUE)
library(gapminder)
remove.packages("gapminder")
library(gapminder)
library(gapminder)
library(ggplot2)
library(gapminder)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
# Creating the computational components
comp_comp_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
#Save file to the disk
saveRDS(comp_comp_gapminder, "comp-comp_gapminder.rds")
# A not very effective visualization
ld_gapminder <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder"))
gapminder_example <- c(
as.character(ld_rmarkdown_header("gapminder plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder))
writeLines(gapminder_example, "gapminder-example.Rmd")
render("gapminder-example.Rmd",html_document())
system("open gapminder-example.html")
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
data(gapminder)
# Load the gapminder data set.
data(gapminder)
gapminder
# Load the gapminder data set.
data(gapminder)
data(gapminder)
library(ggplot2)
library(gapminder)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
gapminder
View(gapminder)
View(gapminder)
gapminder$country[gapminder$country == "Cote d'Ivoire"] = "Cote dIvoire"
View(gapminder)
gapminder$country[gapminder$country == "Cote d'Ivoire"] = "CotedIvoire"
# Load the gapminder data set.
data(gapminder)
data(gapminder)
# What trelliscope would look like when we use trelliscope instead of facet
library(ggplot2)
library(trelliscopejs)
library(gapminder)
ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
# Created a generic function for trelliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), form,
ncol = 2, path="."))
y + eval(c)
} else y
}
rld <- function(ld, header, author, date) {
writeLines(ld_make_chunks(ld), "doc.Rmd")
render("doc.Rmd",html_document())
system("open doc.html")
}
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
library(ggplot2)
library(gapminder)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(rmarkdown)
# Load the gapminder data set.
data(gapminder)
# gapminder$country[gapminder$country == "Cote d'Ivoire"] = "CotedIvoire"
# Creating the computational components
comp_comp_gapminder <- list(
Data = gapminder,
`life expectancy` = ggplot( gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent") +
facet_wrap(~ country + continent))
#Save file to the disk
saveRDS(comp_comp_gapminder, "comp-comp_gapminder.rds")
# A not very effective visualization
ld_gapminder <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder"))
gapminder_example <- c(
as.character(ld_rmarkdown_header("gapminder plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder))
writeLines(gapminder_example, "gapminder-example.Rmd")
render("gapminder-example.Rmd",html_document())
system("open gapminder-example.html")
# What trelliscope would look like when we use trelliscope instead of facet
library(ggplot2)
library(trelliscopejs)
library(gapminder)
ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
system("open gapminder_trellis-example.html")
# Created a generic function for trelliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), form,
ncol = 2, path="."))
y + eval(c)
} else y
}
## Same data set as the first example, switching the decorator this time instead of adding initial expression
ld_gapminder_trellis_generic <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
gapminder_trellis_generic_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope generic",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_generic))
writeLines(gapminder_trellis_generic_example, "gapminder_trellis_generic-example.Rmd")
render("gapminder_trellis_generic-example.Rmd",html_document())
system("open gapminder_trellis_generic-example.html")
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
#Reading in the data
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)))
# Creating the list
comp_comp_covid_trellis <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country), size = 0.6) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country), size = 0.4) +  scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis, "comp-comp_covid_trellis.rds")
# Creating the listdown package
ld_covid_trellis <- listdown(load_cc_expr = readRDS("comp-comp_covid_trellis.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_tsplotly)
)
# Adding a header
covid_trellis_example <- c(
as.character(ld_rmarkdown_header("Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_trellis))
# Rendering
writeLines(covid_trellis_example, "covid_trellis-example.Rmd")
render("covid_trellis-example.Rmd",html_document())
