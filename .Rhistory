geom_line(aes(x=Date_reported, y=New_cases, group=Country), size = 0.4) +  scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis, "comp-comp_covid_trellis.rds")
# Creating the listdown package
ld_covid_trellis <- listdown(load_cc_expr = readRDS("comp-comp_covid_trellis.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_tsplotly)
)
# Adding a header
covid_trellis_example <- c(
as.character(ld_rmarkdown_header("Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_trellis))
# Rendering
writeLines(covid_trellis_example, "covid_trellis-example.Rmd")
render("covid_trellis-example.Rmd",html_document())
covidcountries
covidcountries<- colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
covidcountries
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
#Reading in the data
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)))
covidcountries<- colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
# Creating the list
comp_comp_covid_trellis <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country), size = 0.6) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country), size = 0.4) +  scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
covidcountries<- colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
#Reading in the data
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4))) %>% colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)))
colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
library(trelliscopejs)
library(listdown)
library(tidyverse)
library(rmarkdown)
#Reading in the data
covidcountries <- read.csv("WHO-COVID-19-global-data.csv",
colClasses=c("Date", rep("character", 3),
rep("numeric", 4)))
colnames(covidcountries)[1] <- gsub('^...','',colnames(covidcountries)[1])
# Creating the list
comp_comp_covid_trellis <- list(
Data = covidcountries,
`New cases per day for each Country` = ggplot(covidcountries) + geom_point(aes(x=Date_reported, y=New_cases, group=Country), size = 0.6) +
geom_line(aes(x=Date_reported, y=New_cases, group=Country), size = 0.4) +  scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
theme_bw() +
labs(title = "New cases per day by Country") +
facet_wrap(vars(Country))
)
#Save file to the disk
saveRDS(comp_comp_covid_trellis, "comp-comp_covid_trellis.rds")
# Creating the listdown package
ld_covid_trellis <- listdown(load_cc_expr = readRDS("comp-comp_covid_trellis.rds"),
package = c("ggplot2","trelliscopejs"),
decorator = list(ggplot = facet_tsplotly)
)
# Adding a header
covid_trellis_example <- c(
as.character(ld_rmarkdown_header("Covid plots using trelliscopeJS",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_covid_trellis))
# Rendering
writeLines(covid_trellis_example, "covid_trellis-example.Rmd")
render("covid_trellis-example.Rmd",html_document())
system("open covid_trellis-example.html")
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
# Load the gapminder data set.
data(gapminder)
library(ggplot2)
library(gapminder)
library(listdown)
library(gapminder)
library(trelliscopejs)
library(ggplot2)
library(tidyverse)
library(DT)
library(rmarkdown)
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
render("gapminder_trellis-example.Rmd",html_document())
system("open gapminder_trellis-example.html")
# If p is an ggplot object
facet_tsplotly <- function(p, ...) {
if (is(p$facet, "Facet") && !is(p, "FacetNull")) {
v = p$facet$vars()
o = ggplot()
FacetNull = o$facet
p$facet = FacetNull
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
c = as.call(list(quote(facet_trelliscope), eval(parse(text=paste0("~ ", paste(v, collapse=" + ")))),
ncol = 2,path=".", as_plotly = TRUE))
#the function call with the plotly argument gets evaluated
p + eval(c)
}  else p
}
library(plotly)
## Still the same data set as the first example
ld_gapminder_trellis_plotly <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs","plotly"),
decorator = list(ggplot = facet_tsplotly)
)
gapminder_trellis_plotly_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope plotly",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_plotly))
writeLines(gapminder_trellis_plotly_example, "gapminder_trellis_plotly-example.Rmd")
render("gapminder_trellis_plotly-example.Rmd",html_document())
system("open gapminder_trellis_plotly-example.html")
library(plotly)
## Still the same data set as the first example
ld_gapminder_trellis_plotly <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs","plotly"),
decorator = list(ggplot = facet_tsplotly)
)
gapminder_trellis_plotly_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope plotly",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_plotly))
writeLines(gapminder_trellis_plotly_example, "gapminder_trellis_plotly-example.Rmd")
render("gapminder_trellis_plotly-example.Rmd",html_document())
system("open gapminder_trellis_plotly-example.html")
library(listdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(dplyr)
# Read in the regions data set.
regions = read.csv("COVID-regions-2021.csv",
colClasses=c("character", "Date", rep("numeric", 2)))
# Creating the computational components
computational_components_covid <- list(
Data = regions,
`New cases per day for each region` = ggplot(regions) +
geom_area(aes(Date_reported, New_cases, colour=WHO_region, fill=WHO_region),
stat="smooth",
alpha=.2, position="identity",
method="loess", span=.1)+ labs(title = "Number of daily COVID cases by WHO region") +
scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`New cases per day for each region facet` = ggplot(regions,
aes(x = Date_reported, y = New_cases, col = WHO_region, fill = WHO_region,
stat = "smooth",  method="loess", span=.1)) + geom_area( alpha=.5) +
facet_wrap(.~WHO_region) + labs(title = "Number of daily COVID cases by WHO region facet") + scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`Cases against Death` = ggplot(data = regions,
aes(x=New_cases, y=New_deaths, color = WHO_region)) + geom_point(alpha = .2) +
scale_x_sqrt() +
scale_y_sqrt() +
labs(title = "Number of COVID cases against death by WHO region"),
`Cases against Death facet` = ggplot(filter(regions, New_cases >= 0),
aes(New_cases, New_deaths, colour=WHO_region)) +
geom_point(alpha=.2) +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(vars(WHO_region)) +
theme(aspect.ratio=1, legend.position="none") +
labs(title = "Number of COVID cases against death by WHO region by facet")
)
#Save file to the disk
saveRDS(computational_components_covid, "comp-comp_covid.rds")
comp_covid <- readRDS("comp-comp_covid.rds")
ld_cc_dendro(comp_covid)
library(listdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(dplyr)
# Read in the regions data set.
regions = read.csv("COVID-regions-2021.csv",
colClasses=c("character", "Date", rep("numeric", 2)))
# Creating the computational components
computational_components_covid <- list(
Data = regions,
`New cases per day for each region` = ggplot(regions) +
geom_area(aes(Date_reported, New_cases, colour=WHO_region, fill=WHO_region),
stat="smooth",
alpha=.2, position="identity",
method="loess", span=.1)+ labs(title = "Number of daily COVID cases by WHO region") +
scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`New cases per day for each region facet` = ggplot(regions,
aes(x = Date_reported, y = New_cases, col = WHO_region, fill = WHO_region,
stat = "smooth",  method="loess", span=.1)) + geom_area( alpha=.5) +
facet_wrap(.~WHO_region) + labs(title = "Number of daily COVID cases by WHO region facet") + scale_y_continuous(expand = rep(0,4),labels = label_comma()) +
scale_x_date(limits = as.Date(c("2020-01-01", "2021-03-15")),
expand = expansion(0),
label = label_date_short()),
`Cases against Death` = ggplot(data = regions,
aes(x=New_cases, y=New_deaths, color = WHO_region)) + geom_point(alpha = .2) +
scale_x_sqrt() +
scale_y_sqrt() +
labs(title = "Number of COVID cases against death by WHO region"),
`Cases against Death facet` = ggplot(filter(regions, New_cases >= 0),
aes(New_cases, New_deaths, colour=WHO_region)) +
geom_point(alpha=.2) +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(vars(WHO_region)) +
theme(aspect.ratio=1, legend.position="none") +
labs(title = "Number of COVID cases against death by WHO region by facet")
)
#Save file to the disk
saveRDS(computational_components_covid, "comp-comp_covid.rds")
comp_covid <- readRDS("comp-comp_covid.rds")
ld_cc_dendro(comp_covid)
#Making a listdown object
library(listdown)
library(knitr)
ld_new <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales"))
class(ld_new)
ld_new
covidexample <- c(
as.character(ld_rmarkdown_header("Covid plots",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_new))
covidexample
#Add in data and decorators
library(listdown)
ld_decorator <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales", "plotly"),
decorator = list(ggplot = ggplotly))
class(ld_decorator)
ld_decorator
coviddecoratorexample <- c(
as.character(ld_rmarkdown_header("covid-example")),
ld_make_chunks(ld_decorator))
writeLines(coviddecoratorexample, "covid-decorator-example.Rmd")
render("covid-decorator-example.Rmd",html_document())
library(rmarkdown)
coviddecoratorexample <- c(
as.character(ld_rmarkdown_header("covid-example")),
ld_make_chunks(ld_decorator))
# writeLines(coviddecoratorexample, "covid-decorator-example.Rmd")
# render("covid-decorator-example.Rmd",html_document())
# system("open covid-decorator-example.html")
coviddecoratorexample
library(knitr)
library(rmarkdown)
# Write the document.
#  writeLines(covidexample, "covid-example.Rmd")
#  render("covid-example.Rmd",html_document())
# system("open covid-example.html")
library(knitr)
knitr::opts_knit$set(unnamed.chunk.label="covid-example-make-1")
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(warning = FALSE)
datatable(data.frame(x = 1))
library(knitr)
library(DT)
knitr::opts_knit$set(unnamed.chunk.label="covid-example-make-1")
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(warning = FALSE)
datatable(data.frame(x = 1))
library(rmarkdown)
# Write chunks
writeLines(covidexample, "covid-example.Rmd")
render("covid-example.Rmd",html_document(), run_pandoc=FALSE, quiet=TRUE)
cat(paste(readLines("covid-example.knit.md"), collapse="\n"))
# Creating the computational components, this time without the 'facet_wrap' call.
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
# Creating the computational components, this time without the 'facet_wrap' call.
data(gapminder)
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
# Creating the computational components, this time without the 'facet_wrap' call.
library(gapminder)
comp_comp_gapminder_trellis <- list(
Data = gapminder,
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
#Save file to the disk
saveRDS(comp_comp_gapminder_trellis, "comp-comp_gapminder_trellis.rds")
library(listdown)
# Adding trelliscope call in the initial expressions, notice the description: Path ="."
ld_gapminder_trellis <- listdown(load_cc_expr = readRDS("comp-comp_gapminder_trellis.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = ggtre),
init_expr = {
ggtre = function(x) x + facet_trelliscope(~ country + continent,
nrow = 2, ncol = 7, width = 300, path = ".")
}
)
ld_gapminder_trellis
# writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
#  render("gapminder_trellis-example.Rmd",html_document())
#  system("open gapminder_trellis-example.html")
gapminder_trellis_example
library(rmarkdown)
gapminder_trellis_example <- c(
as.character(ld_rmarkdown_header("gapminder plots using trelliscope",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis))
# writeLines(gapminder_trellis_example, "gapminder_trellis-example.Rmd")
#  render("gapminder_trellis-example.Rmd",html_document())
#  system("open gapminder_trellis-example.html")
gapminder_trellis_example
## Same data set as the first example, switching the decorator this time instead of adding initial expression
ld_gapminder_trellis_generic <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
gapminder_trellis_generic_example <- c(
as.character(ld_rmarkdown_header("gapminder plots trelliscope generic",
author = "Leon",
date = "2021")),
ld_make_chunks(ld_gapminder_trellis_generic))
gapminder_trellis_generic_example
# Make the document
# writeLines(gapminder_trellis_generic_example, "gapminder_trellis_generic-example.Rmd")
#  render("gapminder_trellis_generic-example.Rmd",html_document())
#  system("open gapminder_trellis_generic-example.html")
ld_gapminder_trellis_generic
library(knitr)
library(DT)
knitr::opts_knit$set(unnamed.chunk.label="covid-example-step3")
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(warning = FALSE)
datatable(data.frame(x = 1))
library(rmarkdown)
# Write chunks
writeLines(covidexample, "covid-example.Rmd")
render("covid-example.Rmd",html_document(), run_pandoc=FALSE, quiet=TRUE)
cat(paste(readLines("covid-example.knit.md"), collapse="\n"))
library(knitr)
library(DT)
knitr::opts_knit$set(unnamed.chunk.label="covid-decorator-example-step2")
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(warning = FALSE)
datatable(data.frame(x = 1))
library(rmarkdown)
# Write chunks
writeLines(coviddecoratorexample, "covid-decorator-example.Rmd")
render("covid-decorator-example.Rmd",html_document(), run_pandoc=FALSE, quiet=TRUE)
cat(paste(readLines("covid-decorator-example.knit.md"), collapse="\n"))
# What trelliscope would look like when we use trelliscope instead of facet
library(ggplot2)
library(trelliscopejs)
library(gapminder)
ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
computational_components_covid$Data <- regions
library(rmarkdown)
coviddecoratorexample <- c(
as.character(ld_rmarkdown_header("covid-example")),
ld_make_chunks(ld_decorator))
cat('<iframe src="H:\MasterProject\MastersProject\webpages\covidcasestudy\covid-decorator-example.html" width=920 height=600 frameBorder=0>
cat('<iframe src="MasterProject\MastersProject\webpages\covidcasestudy\covid-decorator-example.html" width=920 height=600 frameBorder=0>
cat('<iframe src="MasterProject/MastersProject/webpages/covidcasestudy/covid-decorator-example.html" width=920 height=600 frameBorder=0>
</iframe>')
# Creating the computational components, this time without the 'facet_wrap' call.
library(gapminder)
comp_comp_gapminder_trellis <- list(
`life expectancy full` = ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) +
theme_bw() +
labs(title = "life expectancy by continent"))
cat('<iframe src="MasterProject/MastersProject/webpages/ggtre/gapminder_trellis-example.html" width=920 height=600 frameBorder=0>
</iframe>')
library(listdown)
library(ggplot2)
library(gtsummary)
library(flextable)
library(dplyr)
library(rmarkdown)
library(plotly)
library(gapminder)
library(trelliscopejs)
library(DT)
library(knitr)
# Created a generic function for trelliscope
# y is an ggplot object
facet_wrap2ts <- function(y){
if (is(y$facet, "Facet") && !is(y, "FacetNull")) {
## get variables
v = y$facet$vars()
## construct Null facet to replace it
o = ggplot()
facetNull = o$facet
y$facet = facetNull
## construct the formula
form = eval(parse(text=paste0("~ ", paste(v, collapse=" + "))))
## construct call
c = as.call(list(quote(facet_trelliscope), form,
ncol = 2, path="."))
y + eval(c)
} else y
}
## Same data set as the first example, switching the decorator this time instead of adding initial expression
ld_gapminder_trellis_generic <- listdown(load_cc_expr = readRDS("comp-comp_gapminder.rds"),
package = c("ggplot2","gapminder", "trelliscopejs"),
decorator = list(ggplot = facet_wrap2ts)
)
cat('<iframe src="MasterProject/MastersProject/webpages/facetwrap2ts/gapminder_trellis_generic-example.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="MasterProject/MastersProject/webpages/ggtre/gapminder_trellis-example.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="MasterProject/MastersProject/webpages/facetwrap2ts/gapminder_trellis_generic-example.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="MasterProject/MastersProject/webpages/facettsplotly/gapminder_trellis_plotly-example.html" width=920 height=600 frameBorder=0>
</iframe>')
library(listdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(dplyr)
# Read in the regions data set.
regions = read.csv("COVID-regions-2021.csv",
colClasses=c("character", "Date", rep("numeric", 2)))
cat('<iframe src="MasterProject/MastersProject/webpages/facetwrap2ts/gapminder_trellis_generic-example.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="MasterProject/MastersProject/webpages/facetwrap2ts/gapminder_trellis_generic-example.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="tsplotly/gapminder_trellis_plotly-example.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="covidfinal/covidfinal.html" width=920 height=600 frameBorder=0>
</iframe>')
cat('<iframe src="covideexample/covid-decorator-example.html" width=920 height=600 frameBorder=0>
</iframe>')
#Making a listdown object
library(listdown)
library(knitr)
ld_new <- listdown(load_cc_expr = readRDS("comp-comp_covid.rds"),
package = c("ggplot2", "tidyverse","scales"))
class(ld_new)
ld_new
library(ggplot2)
library(gapminder)
cc_list <- readRDS("comp-comp_gapminder.rds")
cc_list$`life expectancy`
library(ggplot2)
library(trelliscopejs)
library(gapminder)
ggplot(gapminder) + geom_point(aes(x = year, y = lifeExp)) +
xlim(1948, 2011) + ylim(10, 95) + theme_bw() +
facet_trelliscope(~ country + continent, nrow = 2, ncol = 7, width = 300)
knitr::include_graphics("normaltrelliscope.PNG")
